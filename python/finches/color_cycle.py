from BirdBrain import Finch
from typing import Union, Optional

bird = Finch()

def set_color(red: Union[int, str], green: Optional[int] = None, blue: Optional[int] = None):
    '''Set the color of the Finch robot's beak.

    :param red: Either a hex value representing the color, or the value of the red channel 0-255.
    :param green: If no hex value provided, the value of the green channel 0-255.
    :param blue: If no hex value provided, the value of the blue channel 0-255.
    '''
    if green is None or blue is None:
        if isinstance(red, str):
            if len(red) < 6 or len(red) > 8:
                raise ValueError("If a hex value is not supplied, must provide red, green, blue!")
            try:
                if red.startswith("#"):
                    red = red[1:]
                elif red.startswith("0x"):
                    red = red[3:]
                hex_color = int(red, 16)
            except:
                raise ValueError("If a hex value is not supplied, must provide red, green, blue!")
            else:
                red = (hex_color >> 16) & 0xFF
                green = (hex_color >> 8) & 0xFF
                blue = hex_color & 0xFF
    if red < 0 or red > 255:
        raise ValueError("Red value must be between 0-255!")
    if green < 0 or red > 255:
        raise ValueError("Green value must be between 0-255!")
    if blue < 0 or blue > 255:
        raise ValueError("Blue value must be between 0-255!")
    bird.setBeak(red/2.55, green/2.55, blue/2.55)
    
COLORS = [
    (255, 0, 0), (255, 4, 0), (255, 8, 0), (255, 13, 0), (255, 17, 0), (255, 21, 0), (255, 25, 0), (255, 29, 0), (255, 34, 0), (255, 38, 0), (255, 42, 0), (255, 46, 0), (255, 50, 0), (255, 55, 0), (255, 59, 0), (255, 63, 0), (255, 67, 0), (255, 71, 0), (255, 76, 0), (255, 80, 0), (255, 84, 0), (255, 88, 0), (255, 92, 0), (255, 96, 0), (255, 101, 0), (255, 105, 0), (255, 109, 0), (255, 113, 0), (255, 117, 0), (255, 122, 0), (255, 126, 0), (255, 130, 0), (255, 134, 0), (255, 138, 0), (255, 143, 0), (255, 147, 0), (255, 151, 0), (255, 155, 0), (255, 159, 0), (255, 164, 0), (255, 168, 0), (255, 172, 0), (255, 176, 0), (255, 180, 0), (255, 185, 0), (255, 189, 0), (255, 193, 0), (255, 197, 0), (255, 201, 0), (255, 206, 0), (255, 210, 0), (255, 214, 0), (255, 218, 0), (255, 222, 0), (255, 227, 0), (255, 231, 0), (255, 235, 0), (255, 239, 0), (254, 242, 0), (252, 245, 0), (251, 247, 0), (249, 250, 0), (248, 253, 0), (246, 255, 0), (242, 255, 0), (237, 255, 0), (233, 255, 0), (229, 255, 0), (225, 255, 0), (221, 255, 0), (216, 255, 0), (212, 255, 0), (208, 255, 0), (204, 255, 0), (200, 255, 0), (195, 255, 0), (191, 255, 0), (187, 255, 0), (183, 255, 0), (179, 255, 0), (174, 255, 0), (170, 255, 0), (166, 255, 0), (162, 255, 0), (158, 255, 0), (153, 255, 0), (149, 255, 0), (145, 255, 0), (141, 255, 0), (137, 255, 0), (132, 255, 0), (128, 255, 0), (124, 255, 0), (120, 255, 0), (116, 255, 0), (111, 255, 0), (107, 255, 0), (103, 255, 0), (99, 255, 0), (95, 255, 0), (90, 255, 0), (86, 255, 0), (82, 255, 0), (78, 255, 0), (74, 255, 0), (69, 255, 0), (65, 255, 0), (61, 255, 0), (57, 255, 0), (53, 255, 0), (49, 255, 0), (44, 255, 0), (40, 255, 0), (36, 255, 0), (32, 255, 0), (28, 255, 0), (23, 255, 0), (19, 255, 0), (15, 255, 0), (11, 255, 0), (8, 255, 1), (6, 255, 4), (5, 255, 7), (3, 255, 9), (2, 255, 12), (1, 255, 15), (0, 255, 19), (0, 255, 23), (0, 255, 27), (0, 255, 31), (0, 255, 35), (0, 255, 40), (0, 255, 44), (0, 255, 48), (0, 255, 52), (0, 255, 56), (0, 255, 61), (0, 255, 65), (0, 255, 69), (0, 255, 73), (0, 255, 77), (0, 255, 82), (0, 255, 86), (0, 255, 90), (0, 255, 94), (0, 255, 98), (0, 255, 103), (0, 255, 107), (0, 255, 111), (0, 255, 115), (0, 255, 119), (0, 255, 123), (0, 255, 128), (0, 255, 132), (0, 255, 136), (0, 255, 140), (0, 255, 144), (0, 255, 149), (0, 255, 153), (0, 255, 157), (0, 255, 161), (0, 255, 165), (0, 255, 170), (0, 255, 174), (0, 255, 178), (0, 255, 182), (0, 255, 186), (0, 255, 191), (0, 255, 195), (0, 255, 199), (0, 255, 203), (0, 255, 207), (0, 255, 212), (0, 255, 216), (0, 255, 220), (0, 255, 224), (0, 255, 228), (0, 255, 233), (0, 255, 237), (0, 255, 241), (0, 255, 245), (0, 255, 249), (0, 255, 254), (0, 252, 255), (0, 248, 255), (0, 244, 255), (0, 240, 255), (0, 235, 255), (0, 231, 255), (0, 227, 255), (0, 223, 255), (0, 219, 255), (0, 215, 255), (0, 210, 255), (0, 206, 255), (0, 202, 255), (0, 198, 255), (0, 194, 255), (0, 189, 255), (0, 185, 255), (0, 181, 255), (0, 177, 255), (0, 173, 255), (0, 168, 255), (0, 164, 255), (0, 160, 255), (0, 156, 255), (0, 152, 255), (0, 147, 255), (0, 143, 255), (0, 139, 255), (0, 135, 255), (0, 131, 255), (0, 126, 255), (0, 122, 255), (0, 118, 255), (0, 114, 255), (0, 110, 255), (0, 105, 255), (0, 101, 255), (0, 97, 255), (0, 93, 255), (0, 89, 255), (0, 84, 255), (0, 80, 255), (0, 76, 255), (0, 72, 255), (0, 68, 255), (0, 63, 255), (0, 59, 255), (0, 55, 255), (0, 51, 255), (0, 47, 255), (0, 43, 255), (0, 38, 255), (0, 34, 255), (0, 30, 255), (0, 26, 255), (0, 22, 255), (0, 17, 255), (1, 14, 255), (2, 11, 255), (4, 8, 255), (5, 6, 255), (7, 3, 255), (8, 0, 255), (12, 0, 255), (16, 0, 255), (20, 0, 255), (25, 0, 255), (29, 0, 255), (33, 0, 255), (37, 0, 255), (41, 0, 255), (46, 0, 255), (50, 0, 255), (54, 0, 255), (58, 0, 255), (62, 0, 255), (67, 0, 255), (71, 0, 255), (75, 0, 255), (79, 0, 255), (83, 0, 255), (88, 0, 255), (92, 0, 255), (96, 0, 255), (100, 0, 255), (104, 0, 255), (109, 0, 255), (113, 0, 255), (117, 0, 255), (121, 0, 255), (125, 0, 255), (129, 0, 255), (134, 0, 255), (138, 0, 255), (142, 0, 255), (146, 0, 255), (150, 0, 255), (155, 0, 255), (159, 0, 255), (163, 0, 255), (167, 0, 255), (171, 0, 255), (176, 0, 255), (180, 0, 255), (184, 0, 255), (188, 0, 255), (192, 0, 255), (197, 0, 255), (201, 0, 255), (205, 0, 255), (209, 0, 255), (213, 0, 255), (218, 0, 255), (222, 0, 255), (226, 0, 255), (230, 0, 255), (234, 0, 255), (239, 0, 255), (243, 0, 255), (247, 0, 255), (248, 0, 252), (250, 0, 249), (251, 0, 247), (253, 0, 244), (254, 0, 241), (255, 0, 238), (255, 0, 234), (255, 0, 229), (255, 0, 225), (255, 0, 221), (255, 0, 217), (255, 0, 213), (255, 0, 208), (255, 0, 204), (255, 0, 200), (255, 0, 196), (255, 0, 192), (255, 0, 188), (255, 0, 183), (255, 0, 179), (255, 0, 175), (255, 0, 171), (255, 0, 167), (255, 0, 162), (255, 0, 158), (255, 0, 154), (255, 0, 150), (255, 0, 146), (255, 0, 141), (255, 0, 137), (255, 0, 133), (255, 0, 129), (255, 0, 125), (255, 0, 120), (255, 0, 116), (255, 0, 112), (255, 0, 108), (255, 0, 104), (255, 0, 99), (255, 0, 95), (255, 0, 91), (255, 0, 87), (255, 0, 83), (255, 0, 78), (255, 0, 74), (255, 0, 70), (255, 0, 66), (255, 0, 62), (255, 0, 57), (255, 0, 53), (255, 0, 49), (255, 0, 45), (255, 0, 41), (255, 0, 36), (255, 0, 32), (255, 0, 28), (255, 0, 24)    
]

COLOR_CHANGE_DURATION_S = 10
N_COLORS = len(COLORS)
COLOR_CHANGE_DELAY_S = COLOR_CHANGE_DURATION_S / N_COLORS

bird.playNote(85, 0.2)
sleep(0.2)
bird.playNote(90, 0.2)

def is_button_pressed():
    return bird.getButton("A") or bird.getButton("B")

keep_running = True

# Set the color of the Finch, then wait one second.
while keep_running:
    keep_running = False
    for color in COLORS:
        if is_button_pressed():
            break
        set_color(*color)
        sleep(COLOR_CHANGE_DELAY_S)
    else:
        keep_running = True

bird.playNote(85, 0.2)
sleep(0.2)
bird.playNote(80, 0.2)
set_color(0,0,0)